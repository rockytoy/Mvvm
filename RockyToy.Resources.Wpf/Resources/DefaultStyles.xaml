<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">
	<!-- default value -->
	<sys:Double x:Key="DefaultMarginLength">2</sys:Double>
	<sys:Double x:Key="DefaultMinHeight">20</sys:Double>
	<sys:Double x:Key="DefaultIconSize">20</sys:Double>
	<sys:Double x:Key="DefaultIconSizePlusMargin">24</sys:Double>
	<Thickness x:Key="DefaultMargin" Left="{StaticResource DefaultMarginLength}"
	           Top="{StaticResource DefaultMarginLength}" Right="{StaticResource DefaultMarginLength}"
	           Bottom="{StaticResource DefaultMarginLength}" />


	<Style x:Key="BaseControlStyle" TargetType="{x:Type Control}">
		<Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
		<Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
	</Style>

	<Style TargetType="{x:Type TabControl}">
		<Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
	</Style>

	<Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
	</Style>

	<Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="MinWidth" Value="55" />
		<Setter Property="Padding" Value="{StaticResource DefaultMargin}" />
	</Style>

	<Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="Padding" Value="{StaticResource DefaultMargin}" />
	</Style>

	<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
	</Style>

	<Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
	</Style>

	<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
	</Style>

	<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>

	<Style TargetType="{x:Type Label}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="{StaticResource DefaultMargin}" />
	</Style>

	<Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="Padding" Value="0" />
	</Style>

	<Style TargetType="{x:Type DatePickerTextBox}">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="MinWidth" Value="65" />
	</Style>

	<Style TargetType="{x:Type xctk:ColorPicker}" BasedOn="{StaticResource BaseControlStyle}" />
	<Style TargetType="{x:Type xctk:DateTimeUpDown}" BasedOn="{StaticResource BaseControlStyle}" />
	<Style TargetType="{x:Type xctk:DateTimePicker}" BasedOn="{StaticResource BaseControlStyle}" />
	<Style TargetType="{x:Type xctk:TimePicker}" BasedOn="{StaticResource BaseControlStyle}" />
	<Style TargetType="{x:Type xctk:IntegerUpDown}" BasedOn="{StaticResource BaseControlStyle}" />
	<Style TargetType="{x:Type xctk:DoubleUpDown}" BasedOn="{StaticResource BaseControlStyle}" />
	<Style TargetType="{x:Type xctk:DecimalUpDown}" BasedOn="{StaticResource BaseControlStyle}" />

	<Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="Padding" Value="{StaticResource DefaultMargin}" />
	</Style>

	<!--Use Comic Sans for testing-->
	<!--<FontFamily x:Key="DefaultFont">Comic Sans MS</FontFamily>-->
	<FontFamily x:Key="DefaultFont">Segoe UI</FontFamily>

	<Style x:Key="DefaultWindowStyle" TargetType="{x:Type Window}">
		<!--<Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />-->
		<Setter Property="FontWeight" Value="Regular" />
		<Setter Property="TextOptions.TextFormattingMode" Value="Display" />
		<Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
	</Style>

	<Style TargetType="{x:Type Window}" BasedOn="{StaticResource DefaultWindowStyle}" />

	<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Width" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeWE" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}"
	       BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
		<Setter Property="Padding" Value="2,1,2,1" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="FontWeight" Value="SemiBold" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
					<Grid>
						<themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}"
						                             BorderThickness="{TemplateBinding BorderThickness}"
						                             Background="{TemplateBinding Background}"
						                             IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}"
						                             IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}"
						                             SortDirection="{TemplateBinding SortDirection}"
						                             SeparatorBrush="{TemplateBinding SeparatorBrush}"
						                             SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<ContentPresenter Grid.Column="0"
								                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<Path x:Name="SortArrow"
								      Grid.Column="1"
								      HorizontalAlignment="Right" VerticalAlignment="Center"
								      Width="8" Height="6" Margin="2,0,5,0"
								      Stretch="Fill" Opacity="0.5" Fill="White"
								      RenderTransformOrigin="0.5,0.4"
								      Visibility="Collapsed"
								      Data="M0,0 L1,0 0.5,1 z" />
							</Grid>
						</themes:DataGridHeaderBorder>
						<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"
						       Style="{StaticResource ColumnHeaderGripperStyle}" />
						<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"
						       Style="{StaticResource ColumnHeaderGripperStyle}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="SortDirection" Value="Ascending">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
							<Setter TargetName="SortArrow" Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="SortDirection" Value="Descending">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}" />

	<Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource BaseControlStyle}">
		<Setter Property="HeadersVisibility" Value="Column" />
		<Setter Property="AutoGenerateColumns" Value="False" />
		<Setter Property="SelectionMode" Value="Single" />
		<Setter Property="SelectionUnit" Value="FullRow" />
		<Setter Property="IsReadOnly" Value="True" />
		<Setter Property="CanUserAddRows" Value="False" />
		<Setter Property="CanUserDeleteRows" Value="False" />
		<Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True" />
		<Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True" />
		<Setter Property="VirtualizingPanel.ScrollUnit" Value="Item" />
		<Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
		<Setter Property="RowHeaderWidth" Value="0" />
	</Style>

	<Style TargetType="{x:Type ListView}" BasedOn="{StaticResource BaseControlStyle}" />

    <Style TargetType="{x:Type controls:NumericUpDown}" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}">
        <Setter Property="Margin" Value="{StaticResource DefaultMargin}" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultMinHeight}" />
    </Style>

    <Style x:Key="MultiLineTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="AcceptsTab" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="MinHeight" Value="150" />
    </Style>

</ResourceDictionary>